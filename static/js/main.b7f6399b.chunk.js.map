{"version":3,"sources":["Key.js","Kb.js","Keeb.js","WordTest.js","App.js","serviceWorker.js","index.js"],"names":["Key","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","active","focus","spacebar","spacebar_qwerty","children","indexOf","react_default","a","createElement","className","tabIndex","Component","Kb","_this","backSpace","x","y","textFieldValue","state","setState","currentKey","createAlphabeticalKeyboard","addSpace","onKeyDown","e","keys","keyCode","length","handleEnter","key","max","substring","onChange","newTfv","test","testWord","keyboardWidth","pointerPosition","keyArr","split","preventNextEnter","_this2","document","addEventListener","_this3","removeEventListener","arg","start","time","Date","now","console","log","end","xyArr","arguments","undefined","keyMultiArr","i","push","slice","temparr","shouldBeFocused","Key_Key","value","map","row","index","Fragment","Keeb","createKeyboard","keyComponentArr","WordTest","onInputValueChange","inputValue","target","type","placeholder","App","wordChange","word","keyChange","val","writtenKeys","WordTest_WordTest","BrowserRouter","Link","to","Switch","Route","path","render","Kb_Kb","assign","toLowerCase","Keeb_Keeb","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7f6399b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Key.css\";\r\n\r\nexport default class Key extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let active = this.props.focus;\r\n        let spacebar = this.props.spacebar ? \" spacebar \" : \"\";\r\n        let spacebar_qwerty = this.props.spacebar_qwerty ? \" spacebar-qwerty \" : \"\";\r\n        let children = this.props.children;\r\n\r\n        if (children === \"ø\") {\r\n            children = \"⌫\";\r\n        }\r\n\r\n        if (children === \".\") {\r\n            children = \"⎵\"\r\n        }\r\n\r\n        const chars = \",-æå\";\r\n\r\n        if (chars.indexOf(children) !== -1) {\r\n            children = \" \";\r\n        }\r\n\r\n        return (\r\n            <div\r\n            className={active ? \"key key-active\" + spacebar + spacebar_qwerty: \"key\" + spacebar + spacebar_qwerty}\r\n            tabIndex=\"0\"\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Key from \"./Key\";\r\nimport \"./Key.css\";\r\n\r\n\r\n\r\n/*\r\n * Display KB alphabetical\r\n * Display KB qwerty\r\n * Navigate with arrows\r\n * Choose test-word\r\n * Write test-word\r\n * Record and display time spent\r\n *\r\n */\r\n\r\nexport default class Kb extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keys: [],\r\n            keyboardWidth: this.props.keyboardWidth,\r\n            pointerPosition: 0,\r\n            x: 0,\r\n            y: 0,\r\n            keyArr: this.props.keys.split(\"\"),\r\n            textFieldValue: \"\",\r\n            preventNextEnter: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createAlphabeticalKeyboard();\r\n\r\n        document.addEventListener(\"keydown\", e => this.onKeyDown(e));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", e => this.onKeyDown(e));\r\n    }\r\n\r\n    backSpace = (x, y) => {\r\n        let textFieldValue = this.state.textFieldValue;\r\n        this.setState({\r\n            x: x,\r\n            y: y,\r\n            currentKey: \"BACKSLASH\",\r\n            textFieldValue: textFieldValue\r\n        });\r\n        this.createAlphabeticalKeyboard([x, y]);\r\n    };\r\n\r\n    addSpace = (x, y) => {\r\n        this.setState({ x: x, y: y, currentKey: \" \" });\r\n        this.createAlphabeticalKeyboard([x, y]);\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        let keys = this.state.keys;\r\n\r\n        let x = this.state.x;\r\n        let y = this.state.y;\r\n\r\n        switch (e.keyCode) {\r\n            case 40: //Down\r\n                if (x < keys.length - 1) {\r\n                    x++;\r\n                }\r\n                break;\r\n            case 39: //Right\r\n                if (y < keys[x].length - 1) {\r\n                    y++;\r\n                }\r\n                if (x === 0 && (y >= 3 && y < 6)) {\r\n                    this.backSpace(x, y);\r\n                    return;\r\n                } else if (x === 0 && (y >= 0 && y < 3)) {\r\n                    this.addSpace(x, y);\r\n                    return;\r\n                }\r\n                break;\r\n            case 38: //Up\r\n            \r\n            //For the space function\r\n            if ((x === 1 || x === 0) && y >= 0 && y < 3) {\r\n                if (x > 0) {\r\n                    x--;\r\n                }\r\n                this.addSpace(x, y);\r\n                return;\r\n            }\r\n            //Backspace function\r\n            if ((x === 1 || x === 0) && y >= 3 && y < 6) {\r\n                if (x > 0) {\r\n                    x--;\r\n                }\r\n                this.backSpace(x, y);\r\n                return;\r\n            }\r\n            \r\n            if (x > 0) {\r\n                x--;\r\n            }\r\n                break;\r\n            case 37: //Left\r\n                if (y > 0) {\r\n                    y--;\r\n                }\r\n                if  (x === 0 && (y >= 0 && y < 3)) {\r\n                    this.addSpace(x, y);\r\n                    return;\r\n                } else if (x === 0 && y >= 3 && y < 6) {\r\n                    this.backSpace(x, y);\r\n                    return;\r\n                }\r\n                break;\r\n            case 13: //Enter\r\n                this.handleEnter(e);\r\n                if (x === 0) {\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n\r\n        let currentKey = keys[x][y].key;\r\n\r\n        this.setState({ x: x, y: y, currentKey: currentKey });\r\n\r\n        this.createAlphabeticalKeyboard([x, y]);\r\n    };\r\n\r\n    handleEnter = e => {\r\n        let currentKey = this.state.currentKey;\r\n\r\n        let textFieldValue = this.state.textFieldValue;\r\n\r\n        if (currentKey === \"BACKSLASH\") {\r\n            let max = textFieldValue.length - 1;\r\n            textFieldValue = textFieldValue.substring(0, max);\r\n            this.setState({ textFieldValue: textFieldValue });\r\n            this.props.onChange( textFieldValue );\r\n            return;\r\n        }\r\n        let newTfv = textFieldValue + currentKey;\r\n        \r\n        this.setState({ textFieldValue: newTfv });\r\n        this.props.onChange( newTfv );\r\n\r\n        if (newTfv.length === 1) {\r\n            this.test(\"start\");\r\n        }\r\n\r\n        if (newTfv === this.props.testWord) {\r\n            this.test(\"stop\");\r\n        }\r\n    };\r\n\r\n    test(arg) {\r\n        let timer = this.state.time;\r\n\r\n        let start;\r\n\r\n        if (arg === \"start\") {\r\n            start = Date.now();\r\n            console.log(\"test start\");\r\n            this.setState({start: start})\r\n        }\r\n\r\n        if (arg === \"stop\") {\r\n            let end = Date.now();\r\n            this.setState({end: end})\r\n            console.log(\"Time: \", end-this.state.start, \"ms, \", (end-this.state.start)/1000, \"s\");\r\n        }\r\n\r\n    }\r\n\r\n    createAlphabeticalKeyboard(xyArr = []) {\r\n        let keyArr = this.state.keyArr;\r\n        let keyboardWidth = this.state.keyboardWidth;\r\n        let keys = [];\r\n\r\n        let keyMultiArr = [];\r\n        let currentKey = this.state.currentKey;\r\n\r\n        for (let i = 0; i < keyArr.length; i += keyboardWidth) {\r\n            keyMultiArr.push(keyArr.slice(i, i + keyboardWidth));\r\n        }\r\n\r\n        for (let x = 0; x < keyMultiArr.length; x++) {\r\n            let temparr = [];\r\n            for (let y = 0; y < keyMultiArr[x].length; y++) {\r\n                let shouldBeFocused = false;\r\n                if (x === xyArr[0] && y === xyArr[1]) {\r\n                    shouldBeFocused = true;\r\n                }\r\n                let chars = ',.-æøå'\r\n                if (chars.indexOf(keyMultiArr[x][y]) !== -1) {\r\n                    temparr.push(\r\n                        <Key\r\n                            key={keyMultiArr[x][y]}\r\n                            spacebar\r\n                            focus={shouldBeFocused}\r\n                        >\r\n                            {keyMultiArr[x][y]}\r\n                        </Key>\r\n                    );\r\n                } else {\r\n                    temparr.push(\r\n                        <Key key={keyMultiArr[x][y]} focus={shouldBeFocused}>\r\n                            {keyMultiArr[x][y]}\r\n                        </Key>\r\n                    );\r\n                }\r\n            }\r\n            keys.push(temparr);\r\n        }\r\n\r\n        this.setState({ keys: keys });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"key-container\">\r\n                <input\r\n                    className=\"textfield\"\r\n                    value={this.state.textFieldValue}\r\n                />\r\n                {this.state.keys.map((row, index) => {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            {row}\r\n                            <br />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n                {this.state.end ? <h2>Tid: {(this.state.end-this.state.start) / 1000 } s</h2> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Key from \"./Key\";\r\nimport \"./Key.css\";\r\n\r\n/*\r\n * Display KB alphabetical\r\n * Display KB qwerty\r\n * Navigate with arrows\r\n * Choose test-word\r\n * Write test-word\r\n * Record and display time spent\r\n * \r\n */\r\n\r\nexport default class Keeb extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyArr: [],\r\n            keyboardWidth: this.props.keyboardWidth,\r\n            pointerPosition: 0,\r\n            x: 0,\r\n            y: 0,\r\n            textFieldValue: \"\",\r\n            keyComponentArr: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createKeyboard();\r\n\r\n        document.addEventListener(\"keydown\", e => this.onKeyDown(e));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", e => this.onKeyDown(e));\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        let keys = this.props.keys;\r\n\r\n\r\n        let x = this.state.x;\r\n        let y = this.state.y;\r\n        \r\n        switch (e.keyCode) {\r\n            case 40: //Down\r\n                if (x < keys.length - 1) {\r\n                    //Acounting for rows of different length\r\n                    if ((x === 2 && y !== 0 && y !== 8 ) || (x === 1 && y === 9) ) {\r\n                        y--;\r\n                    } else if (x === 2 && y === 8) {\r\n                        y--;\r\n                    } \r\n                    x++;\r\n                }\r\n                break;\r\n                case 39: //Right\r\n                if (y < keys[x].length - 1) {\r\n                    y++;\r\n                }\r\n                break;\r\n                case 38: //Up\r\n                if (x > 0) {\r\n                    if (x === 3) {\r\n                        y++;\r\n                    }\r\n                    x--;\r\n                }\r\n                break;\r\n                case 37: //Left\r\n                if (y > 0) {\r\n                    y--;\r\n                }\r\n                break;\r\n                case 13: //Enter\r\n                this.handleEnter(e);\r\n                break;\r\n            }\r\n            \r\n            let currentKey = keys[x][y];\r\n            this.setState({ x: x, y: y, currentKey: currentKey });\r\n            \r\n            this.createKeyboard([x, y]);\r\n        };\r\n\r\n    handleEnter = e => {\r\n        let textFieldValue = this.state.textFieldValue;\r\n        let currentKey = this.state.currentKey;\r\n        if (currentKey === \"⌫\") {\r\n            this.setState({ textFieldValue: textFieldValue.substring(0, textFieldValue.length-1) });\r\n            return;\r\n        }\r\n\r\n        let newTfv = textFieldValue + currentKey;\r\n        this.setState({ textFieldValue: newTfv });\r\n\r\n        if (newTfv.length === 1) {\r\n            this.test(\"start\");\r\n        }\r\n\r\n        if (newTfv === this.props.testWord) {\r\n            this.test(\"stop\");\r\n        }\r\n    };\r\n    \r\n\r\n    createKeyboard(xyArr = []) {\r\n        let keyArr = [];\r\n\r\n        let keys = this.props.keys;\r\n        let currentKey = this.state.currentKey;\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            keyArr.push(keys[i].split(\"\"));\r\n        }\r\n\r\n        let keyComponentArr = [];\r\n        for (let x = 0; x < keyArr.length; x++) {\r\n            let temparr = [];\r\n            for (let y = 0; y < keyArr[x].length; y++) {\r\n                let shouldBeFocused = false;\r\n                if (x === xyArr[0] && y === xyArr[1]) {\r\n                    shouldBeFocused = true;\r\n                }\r\n\r\n                console.log(keyArr);\r\n\r\n                if (keyArr[x][y] === \" \") {\r\n                    console.log(\"yeaha\");\r\n                    temparr.push(<Key spacebar_qwerty focus={shouldBeFocused}>{keyArr[x][y]}</Key>)\r\n                } else {\r\n                    temparr.push(<Key focus={shouldBeFocused}>{keyArr[x][y]}</Key>)\r\n                }\r\n            }\r\n            keyComponentArr.push(temparr);\r\n        }\r\n\r\n        this.setState({keyArr: keyArr, keyComponentArr: keyComponentArr})\r\n\r\n    }\r\n\r\n    test(arg) {\r\n        let timer = this.state.time;\r\n\r\n        let start;\r\n\r\n        if (arg === \"start\") {\r\n            start = Date.now();\r\n            console.log(\"test start\");\r\n            this.setState({start: start})\r\n        }\r\n\r\n        if (arg === \"stop\") {\r\n            let end = Date.now();\r\n            this.setState({end: end})\r\n            console.log(\"Time: \", end-this.state.start, \"ms, \", (end-this.state.start)/1000, \"s\");\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"key-container\">\r\n                <input\r\n                    className=\"textfield\"\r\n                    value={this.state.textFieldValue}\r\n                />\r\n                {this.state.keyComponentArr.map((row) => {\r\n                    return <>{row}<br /></>\r\n                })}\r\n                {this.state.end ? <h2>Tid: {(this.state.end-this.state.start) / 1000 } s</h2> : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class WordTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {inputValue: \"\"}\r\n    }\r\n\r\n    onInputValueChange = (e) => {\r\n        this.setState({inputValue: e.target.value});\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n    }\r\n    \r\n    componentWillUpdate() {\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"wordtest\">\r\n                <input type=\"text\" onChange={this.props.onChange} placeholder=\"Hvilket ord skal testes?\" value={this.state.value} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Kb from \"./Kb\";\r\nimport Keeb from \"./Keeb\";\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\nimport WordTest from './WordTest';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {word: \"\", writtenKeys: \"\"}\r\n    }\r\n\r\n    wordChange = (e) => {\r\n      this.setState({word: e.target.value});\r\n    }\r\n\r\n    keyChange = (val) => {\r\n      this.setState({writtenKeys: val});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \r\n            <div className=\"App\">\r\n  \r\n            <WordTest\r\n            onChange={this.wordChange}\r\n            value={this.state.word}\r\n            testWord={this.state.writtenKeys}\r\n            />\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <nav>\r\n                          <ul>\r\n                            <li><Link to=\"/abc\">Alfabetisk</Link></li>\r\n                            <li><Link to=\"/qwerty\">Qwerty</Link></li>\r\n                          </ul> \r\n                        </nav>\r\n\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/abc\"\r\n                                render={props => (\r\n                                    <Kb\r\n                                        {...props}\r\n                                        keys={\",.-æøåABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".toLowerCase()}\r\n                                        keyboardWidth={6}\r\n                                        word={this.state.word}\r\n                                        onChange={this.keyChange}\r\n                                        testWord={this.state.word}\r\n                                    />\r\n                                )}\r\n                            />\r\n\r\n                            <Route\r\n                                path=\"/qwerty\"\r\n                                render={props => (\r\n                                    <Keeb\r\n                                        {...props}\r\n                                        testWord={this.state.word}\r\n                                        keys={[\r\n                                            \"1234567890\",\r\n                                            \"qwertyuiop\",\r\n                                            \"asdfghjkl\",\r\n                                            \"zxcvbnm⌫\",\r\n                                            \"        \"\r\n                                        ]}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}